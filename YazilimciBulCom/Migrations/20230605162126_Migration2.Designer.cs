// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YazilimciBulCom.Contexts;

#nullable disable

namespace YazilimciBulCom.Migrations
{
    [DbContext(typeof(CommonDbContext))]
    [Migration("20230605162126_Migration2")]
    partial class Migration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YazilimciBulCom.Entities.Departments.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Front-End Developer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Back-End Developer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Full-Stack Developer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mobile Developer"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Database Developer"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Game Developer"
                        });
                });

            modelBuilder.Entity("YazilimciBulCom.Entities.Employees.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("Gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("LastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhotoUrl");

                    b.Property<int>("SalaryExpectation")
                        .HasColumnType("int")
                        .HasColumnName("SalaryExpectation");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 2,
                            Description = "SelamunAleyküm, Ben Çağdaş Türkiye'nin Antalya ilinde yaşayan yazılım geliştiricisiyim. Yazılım hayatıma 2020 yılında başladım ve bu zamana kadar yazılım geliştirmeye devam ettirmekteyim. Keçiborlu Meslek Yüksekokulu Bilgisayar Programcılğı öğrencisiyim.",
                            Email = "kocamancagdas59@gmail.com",
                            FirstName = "Çağdaş",
                            Gender = false,
                            LastName = "Kocaman",
                            PhoneNumber = "05366807040",
                            PhotoUrl = "",
                            SalaryExpectation = 10000
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Description = "SelamunAleyküm, Ben Çağdaş Türkiye'nin Antalya ilinde yaşayan yazılım geliştiricisiyim. Yazılım hayatıma 2020 yılında başladım ve bu zamana kadar yazılım geliştirmeye devam ettirmekteyim. Keçiborlu Meslek Yüksekokulu Bilgisayar Programcılğı öğrencisiyim.",
                            Email = "kocamancagdas59@gmail.com",
                            FirstName = "Çağdaş",
                            Gender = false,
                            LastName = "Kocaman",
                            PhoneNumber = "05366807040",
                            PhotoUrl = "",
                            SalaryExpectation = 10000
                        });
                });

            modelBuilder.Entity("YazilimciBulCom.Entities.Employees.Employee", b =>
                {
                    b.HasOne("YazilimciBulCom.Entities.Departments.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("YazilimciBulCom.Entities.Departments.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
